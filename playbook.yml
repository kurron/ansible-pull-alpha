#!/usr/bin/env ansible-playbook

- name: Gather prerequisites
  hosts: all
  gather_facts: True
  tasks:
    - name: create groups based on distribution
      group_by: key={{ ansible_distribution }}

# https://www.digitalocean.com/community/tutorials/how-to-add-swap-on-ubuntu-14-04
- name: Add Swap File
  hosts: Ubuntu
  gather_facts: True
  sudo: True
  vars:
       guard_name: "swapfile"
       swap_size: "4G"
       swap_path: "/swapfile"
       swappiness: "vm.swappiness=10"
       inode: "vm.vfs_cache_pressure=50"
       guard_prefix: "ansible-swapfile"
       fallocate_guard: "/var/{{ guard_prefix }}-fallocate"
       mkswap_guard: "/var/{{ guard_prefix }}-mkswap"
       swapon_guard: "/var/{{ guard_prefix }}-swapon"
       swappiness_guard: "/var/{{ guard_prefix }}-swappiness"
       inode_guard: "/var/{{ guard_prefix }}-inode"
  tasks:
      - command: /usr/bin/fallocate --length {{ swap_size }} {{ swap_path }} creates={{ fallocate_guard }}
      - file: path={{ fallocate_guard }} state=touch
      - file: path={{ swap_path }} owner=root group=root mode=0600
      - command: /sbin/mkswap {{ swap_path }} creates={{ mkswap_guard }}
      - file: path={{ mkswap_guard }} state=touch
      - command: /sbin/swapon {{ swap_path }} creates={{ swapon_guard }}
      - file: path={{ swapon_guard }} state=touch
      - lineinfile: dest=/etc/fstab line="{{ swap_path }}   none    swap    sw    0   0"
      - command: /sbin/sysctl {{ swappiness }} creates={{ swappiness_guard }}
      - file: path={{ swappiness_guard }} state=touch
      - lineinfile: dest=/etc/sysctl.conf line="{{ swappiness }}"
      - command: /sbin/sysctl {{ inode }} creates={{ inode_guard }}
      - file: path={{ inode_guard }} state=touch
      - lineinfile: dest=/etc/sysctl.conf line="{{ inode }}"

- name: Configure the MySQL Partition
  hosts: Ubuntu
  become: True
  vars:
       device_name: "/dev/sdb"
       group_name: "mysql"
       volume_name: "storage"
       volume_size: "7G"
       mount_point: "/var/lib/mysql"
       guard_prefix: "ansible-mysql"
       pvcreate_guard: "/var/{{ guard_prefix }}-pvcreate"
       vgcreate_guard: "/var/{{ guard_prefix }}-vgcreate"
       lvcreate_guard: "/var/{{ guard_prefix }}-lvcreate"
       mkfs_guard: "/var/{{ guard_prefix }}-mkfs"
  tasks:
      - apt: name=lvm2 state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - command: /sbin/pvcreate {{ device_name }} creates={{ pvcreate_guard }}
      - file: path={{ pvcreate_guard }} state=touch
      - command: /sbin/vgcreate {{ group_name }} {{ device_name }} creates={{ vgcreate_guard }}
      - file: path={{ vgcreate_guard }} state=touch
      - command: /sbin/lvcreate --name {{ volume_name }} --size {{ volume_size }} {{ group_name }} creates={{ lvcreate_guard }}
      - file: path={{ lvcreate_guard }} state=touch
      - command: /sbin/mkfs.ext4 /dev/{{ group_name }}/{{ volume_name }} creates={{ mkfs_guard }}
      - file: path={{ mkfs_guard }} state=touch
      - mount: name={{ mount_point }} src=/dev/{{ group_name }}/{{ volume_name }} fstype=ext4 opts=noatime state=mounted

- name: Configure the RabbitMQ Partition
  hosts: Ubuntu
  become: True
  vars:
       device_name: "/dev/sdc"
       group_name: "rabbitmq"
       volume_name: "storage"
       volume_size: "7G"
       mount_point: "/var/lib/rabbitmq"
       guard_prefix: "ansible-rabbitmq"
       pvcreate_guard: "/var/{{ guard_prefix }}-pvcreate"
       vgcreate_guard: "/var/{{ guard_prefix }}-vgcreate"
       lvcreate_guard: "/var/{{ guard_prefix }}-lvcreate"
       mkfs_guard: "/var/{{ guard_prefix }}-mkfs"
  tasks:
      - apt: name=lvm2 state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - command: /sbin/pvcreate {{ device_name }} creates={{ pvcreate_guard }}
      - file: path={{ pvcreate_guard }} state=touch
      - command: /sbin/vgcreate {{ group_name }} {{ device_name }} creates={{ vgcreate_guard }}
      - file: path={{ vgcreate_guard }} state=touch
      - command: /sbin/lvcreate --name {{ volume_name }} --size {{ volume_size }} {{ group_name }} creates={{ lvcreate_guard }}
      - file: path={{ lvcreate_guard }} state=touch
      - command: /sbin/mkfs.ext4 /dev/{{ group_name }}/{{ volume_name }} creates={{ mkfs_guard }}
      - file: path={{ mkfs_guard }} state=touch
      - mount: name={{ mount_point }} src=/dev/{{ group_name }}/{{ volume_name }} fstype=ext4 opts=noatime state=mounted

- name: Configure the MongoDB Partition
  hosts: Ubuntu
  become: True
  vars:
       device_name: "/dev/sdd"
       group_name: "mongodb"
       volume_name: "storage"
       volume_size: "7G"
       mount_point: "/var/lib/mongodb"
       guard_prefix: "ansible-mongodb"
       pvcreate_guard: "/var/{{ guard_prefix }}-pvcreate"
       vgcreate_guard: "/var/{{ guard_prefix }}-vgcreate"
       lvcreate_guard: "/var/{{ guard_prefix }}-lvcreate"
       mkfs_guard: "/var/{{ guard_prefix }}-mkfs"
  tasks:
      - apt: name=xfsprogs state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - apt: name=lvm2 state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - command: /sbin/pvcreate {{ device_name }} creates={{ pvcreate_guard }}
      - file: path={{ pvcreate_guard }} state=touch
      - command: /sbin/vgcreate {{ group_name }} {{ device_name }} creates={{ vgcreate_guard }}
      - file: path={{ vgcreate_guard }} state=touch
      - command: /sbin/lvcreate --name {{ volume_name }} --size {{ volume_size }} {{ group_name }} creates={{ lvcreate_guard }}
      - file: path={{ lvcreate_guard }} state=touch
      - command: /sbin/mkfs.xfs /dev/{{ group_name }}/{{ volume_name }} creates={{ mkfs_guard }}
      - file: path={{ mkfs_guard }} state=touch
      - mount: name={{ mount_point }} src=/dev/{{ group_name }}/{{ volume_name }} fstype=xfs opts=noatime state=mounted

- name: Install MySQL
  hosts: Ubuntu
  become: True
  vars:
       version: "5.6"
  tasks:
      - apt: name=mysql-server-{{ version }} state=present update_cache=true cache_valid_time=3600 install_recommends=true

- name: Install RabbitMQ
  hosts: Ubuntu
  become: True
  vars:
       version: "1.2.3"
  tasks:
      # we need to figure out how to make RabbitMQ look for its configuration on a stable partition!
      - template: src=templates/rabbitmq.config dest=/etc/rabbitmq.config mode=0444 backup=yes force=yes
      - apt_key: url='https://www.rabbitmq.com/rabbitmq-release-signing-key.asc' state=present
      - apt_repository: repo='deb http://www.rabbitmq.com/debian/ testing main' state=present update_cache=yes
      - apt: name=rabbitmq-server state=present update_cache=true cache_valid_time=3600 install_recommends=true
      - command: rabbitmq-plugins enable rabbitmq_management
      - service: name=rabbitmq-server state=restarted
      - command: rabbitmqctl status

- name: Install MongoDB
  hosts: Ubuntu
  become: True
  vars:
       cacheSizeGB: 1
       notablescan: 0
       profilingMode: "off"
       storageDirectory: "/var/lib/mongodb" 
  tasks:
    - copy: src=files/disable-transparent-hugepages dest=/etc/init.d/disable-transparent-hugepages mode=0755 backup=no force=yes
    - command: /usr/sbin/update-rc.d disable-transparent-hugepages defaults
    - template: src=templates/mongod.conf dest=/etc/mongod.conf mode=0444 backup=yes force=yes
    - apt_key: state=present keyserver=keyserver.ubuntu.com id=EA312927
    - apt_repository: repo='deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.2 multiverse' state=present
    - apt: name=mongodb-org state=latest update_cache=true cache_valid_time=3600 install_recommends=true
